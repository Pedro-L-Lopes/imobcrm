// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using imobcrm.Context;

#nullable disable

namespace imobcrm.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241202002228_DataCriacaoIovel")]
    partial class DataCriacaoIovel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("imobcrm.Models.Cliente", b =>
                {
                    b.Property<Guid>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CpfCnpj")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("imobcrm.Models.ContaExtra", b =>
                {
                    b.Property<Guid>("IdContaExtra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CodigoConta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ContratoAluguelContratoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("StatusPagamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoConta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("IdContaExtra");

                    b.HasIndex("ContratoAluguelContratoId");

                    b.ToTable("ContasExtras");
                });

            modelBuilder.Entity("imobcrm.Models.ContratoAluguel", b =>
                {
                    b.Property<Guid>("ContratoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FimContrato")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ImovelId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InicioContrato")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("LocadorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("LocatarioId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("OutrosValores")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("StatusContrato")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("TempoContrato")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("UltimaRenovacao")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("ValorCondominio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ValorContrato")
                        .HasColumnType("decimal(65,30)");

                    b.Property<byte>("VencimentoAluguel")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("ContratoId");

                    b.HasIndex("ImovelId");

                    b.HasIndex("LocadorId");

                    b.HasIndex("LocatarioId");

                    b.ToTable("ContratosAluguel");
                });

            modelBuilder.Entity("imobcrm.Models.Imovel", b =>
                {
                    b.Property<Guid>("ImovelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<float?>("Area")
                        .HasColumnType("float");

                    b.Property<byte?>("Banheiros")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DataAutorizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCricao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Finalidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte?>("Garagem")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("LocalizacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ProprietarioId")
                        .HasColumnType("char(36)");

                    b.Property<byte?>("Quartos")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte?>("SalasEstar")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte?>("SalasJantar")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("SiteCod")
                        .HasColumnType("int");

                    b.Property<byte?>("Suites")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("TipoAutorizacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoImovel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ValorAutorizacao")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("ValorCondominio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<byte?>("Varanda")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("ImovelId");

                    b.HasIndex("LocalizacaoId");

                    b.HasIndex("ProprietarioId");

                    b.ToTable("Imoveis");
                });

            modelBuilder.Entity("imobcrm.Models.Localizacao", b =>
                {
                    b.Property<int>("LocalizacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LocalizacaoId"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("LocalizacaoId");

                    b.ToTable("Localizacoes");
                });

            modelBuilder.Entity("imobcrm.Models.PagamentoAluguel", b =>
                {
                    b.Property<Guid>("PagamentoAluguelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataVencimentoAluguel")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PeriodoFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PeriodoInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("StatusPagamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("ValorPago")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("PagamentoAluguelId");

                    b.HasIndex("ContratoId");

                    b.ToTable("PagamentoAlugueis");
                });

            modelBuilder.Entity("imobcrm.Models.Visita", b =>
                {
                    b.Property<Guid>("VisitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ImovelId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("VisitaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ImovelId");

                    b.ToTable("Visitas");
                });

            modelBuilder.Entity("imobcrm.Models.ContaExtra", b =>
                {
                    b.HasOne("imobcrm.Models.ContratoAluguel", "ContratoAluguel")
                        .WithMany()
                        .HasForeignKey("ContratoAluguelContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContratoAluguel");
                });

            modelBuilder.Entity("imobcrm.Models.ContratoAluguel", b =>
                {
                    b.HasOne("imobcrm.Models.Imovel", "Imovel")
                        .WithMany()
                        .HasForeignKey("ImovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("imobcrm.Models.Cliente", "Locador")
                        .WithMany()
                        .HasForeignKey("LocadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("imobcrm.Models.Cliente", "Locatario")
                        .WithMany()
                        .HasForeignKey("LocatarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Imovel");

                    b.Navigation("Locador");

                    b.Navigation("Locatario");
                });

            modelBuilder.Entity("imobcrm.Models.Imovel", b =>
                {
                    b.HasOne("imobcrm.Models.Localizacao", "Localizacao")
                        .WithMany()
                        .HasForeignKey("LocalizacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("imobcrm.Models.Cliente", "Proprietario")
                        .WithMany("Imoveis")
                        .HasForeignKey("ProprietarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Localizacao");

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("imobcrm.Models.PagamentoAluguel", b =>
                {
                    b.HasOne("imobcrm.Models.ContratoAluguel", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("imobcrm.Models.Visita", b =>
                {
                    b.HasOne("imobcrm.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("imobcrm.Models.Imovel", "Imovel")
                        .WithMany()
                        .HasForeignKey("ImovelId");

                    b.Navigation("Cliente");

                    b.Navigation("Imovel");
                });

            modelBuilder.Entity("imobcrm.Models.Cliente", b =>
                {
                    b.Navigation("Imoveis");
                });
#pragma warning restore 612, 618
        }
    }
}
